/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    pages: Page;
    boats: Boat;
    brands: Brand;
    services: Service;
    testimonials: Testimonial;
    settings: Setting;
    navigation: Navigation;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    boats: BoatsSelect<false> | BoatsSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
    navigation: NavigationSelect<false> | NavigationSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  roles?: ('admin' | 'editor')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  isHomePage?: boolean | null;
  /**
   * ðŸ“„ Full-page blocks are marked with a page icon. ðŸ”² Section blocks are marked with a square icon.
   */
  content?:
    | (
        | {
            title: string;
            subtitle: string;
            address: string;
            hours: {
              text: string;
              id?: string | null;
            }[];
            phones: {
              label: string;
              number: string;
              id?: string | null;
            }[];
            emails: {
              email: string;
              id?: string | null;
            }[];
            areasServed: {
              area: string;
              id?: string | null;
            }[];
            mapImage: number | Media;
            ctaTitle: string;
            ctaDescription: string;
            ctaButtonText: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contact';
          }
        | {
            blockType: 'financing';
            title: string;
            subtitle: string;
            boatFinancing: {
              title: string;
              description: string;
              features: {
                text: string;
                id?: string | null;
              }[];
            };
            serviceFinancing: {
              title: string;
              description: string;
              features: {
                text: string;
                id?: string | null;
              }[];
            };
            calculator: {
              title: string;
              defaultAmount: number;
              defaultRate: number;
              defaultTerm: number;
              phoneNumber: string;
            };
            faq: {
              question: string;
              answer: string;
              id?: string | null;
            }[];
            cta: {
              title: string;
              description: string;
              phoneNumber: string;
            };
            id?: string | null;
            blockName?: string | null;
          }
        | {
            blockType: 'services';
            title: string;
            subtitle: string;
            phoneNumber: string;
            /**
             * Select featured services to highlight at the top of the page
             */
            featuredServices: (number | Service)[];
            /**
             * Select maintenance and repair services
             */
            maintenanceServices: (number | Service)[];
            /**
             * Select upgrade and enhancement services
             */
            upgradeServices: (number | Service)[];
            reasons: {
              text: string;
              id?: string | null;
            }[];
            reasonsImage: number | Media;
            /**
             * Select winterization service packages
             */
            winterizationPackages: (number | Service)[];
            servicePolicies: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
          }
        | {
            blockType: 'aboutUs';
            aboutSection: {
              title: string;
              content: {
                paragraph: string;
                id?: string | null;
              }[];
              image: number | Media;
              features: {
                icon: 'users' | 'zap';
                title: string;
                description: string;
                id?: string | null;
              }[];
            };
            brandsSection: {
              title: string;
              subtitle: string;
              brands: {
                name: string;
                description: string;
                features?:
                  | {
                      text: string;
                      id?: string | null;
                    }[]
                  | null;
                image: number | Media;
                popularModels?:
                  | {
                      model: string;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[];
            };
            servicesSection: {
              title: string;
              subtitle: string;
              description: string;
              services: {
                icon: 'ship' | 'wrench' | 'compass' | 'lifeBuoy' | 'dollarSign' | 'users' | 'zap' | 'shield' | 'award';
                title: string;
                description: string;
                id?: string | null;
              }[];
            };
            testimonialsSection: {
              title: string;
              subtitle: string;
              testimonials: {
                name: string;
                location: string;
                text: string;
                id?: string | null;
              }[];
            };
            contactSection: {
              title: string;
              subtitle: string;
              address: string;
              hours: {
                text: string;
                id?: string | null;
              }[];
              phones: {
                label: string;
                number: string;
                id?: string | null;
              }[];
              emails: {
                email: string;
                id?: string | null;
              }[];
              areasServed: {
                area: string;
                id?: string | null;
              }[];
              mapImage: number | Media;
              ctaTitle: string;
              ctaDescription: string;
              ctaButtonText: string;
            };
            id?: string | null;
            blockName?: string | null;
          }
        | {
            title: string;
            description: string;
            phoneNumber?: string | null;
            rating: {
              value: number;
              text: string;
            };
            /**
             * Recommended size: 1920x1080px
             */
            backgroundImage?: (number | null) | Media;
            /**
             * MP4 format recommended. Will fallback to background image if video cannot be played.
             */
            backgroundVideo?: (number | null) | Media;
            primaryCta: {
              label: string;
              link: string;
              icon?: ('calendar' | 'none') | null;
            };
            secondaryCta: {
              label: string;
              link: string;
              icon?: ('chevron-right' | 'none') | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            title: string;
            description: string;
            brands: (number | Brand)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'featuredBrands';
          }
        | {
            title: string;
            description: string;
            boats: (number | Boat)[];
            cta: {
              label: string;
              link: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'fleet';
          }
        | {
            blockType: 'services_section';
            title: string;
            description: string;
            services: (number | Service)[];
            cta: {
              label: string;
              link: string;
            };
            id?: string | null;
            blockName?: string | null;
          }
        | {
            title: string;
            description: string;
            testimonials: (number | Testimonial)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'testimonials';
          }
        | {
            content: {
              [k: string]: unknown;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            title: string;
            content: {
              paragraph: string;
              id?: string | null;
            }[];
            image: number | Media;
            features: {
              icon: 'users' | 'zap';
              title: string;
              description: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'about';
          }
        | {
            title: string;
            subtitle: string;
            brands: {
              name: string;
              description: string;
              features?:
                | {
                    text: string;
                    id?: string | null;
                  }[]
                | null;
              image: number | Media;
              popularModels?:
                | {
                    model: string;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'brands';
          }
        | BoatsBlock
      )[]
    | null;
  slug: string;
  seo?: {
    metaDescription?: string | null;
    ogTitle?: string | null;
    ogDescription?: string | null;
    ogImage?: (number | null) | Media;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  title: string;
  description: string;
  /**
   * Lucide icon name (e.g., 'Wrench', 'Anchor', etc.)
   */
  icon?: string | null;
  /**
   * Service image
   */
  image?: (number | null) | Media;
  featured?: boolean | null;
  price?: {
    /**
     * Starting price for this service
     */
    startingAt?: number | null;
    unit?: ('hour' | 'service' | 'day') | null;
  };
  details?:
    | {
        title: string;
        description?: string | null;
        /**
         * Lucide icon name
         */
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  faqs?:
    | {
        question: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  callToAction?: {
    title?: string | null;
    description?: string | null;
    buttonText?: string | null;
    buttonLink?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  name: string;
  description?: string | null;
  /**
   * Brand logo (preferably SVG or PNG with transparent background)
   */
  logo?: (number | null) | Media;
  featured?: boolean | null;
  /**
   * Official brand website URL
   */
  website?: string | null;
  /**
   * List of boat models from this brand
   */
  models?:
    | {
        name: string;
        description?: string | null;
        image?: (number | null) | Media;
        specs?: {
          length?: string | null;
          beam?: string | null;
          capacity?: string | null;
          weight?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "boats".
 */
export interface Boat {
  id: number;
  name: string;
  manufacturer: string;
  model: string;
  trim?: string | null;
  modelYear?: number | null;
  condition?: ('new' | 'used') | null;
  status?: ('available' | 'sold' | 'on-hold') | null;
  price: number;
  listPrice?: number | null;
  description: {
    [k: string]: unknown;
  }[];
  mainImage?: (number | null) | Media;
  gallery?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  specs?: {
    length?: string | null;
    capacity?: string | null;
    speed?: string | null;
  };
  available?: boolean | null;
  stockNumber?: string | null;
  category?: string | null;
  slug: string;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  name: string;
  text: string;
  rating: number;
  position?: string | null;
  company?: string | null;
  featured?: boolean | null;
  /**
   * Optional profile picture
   */
  avatar?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BoatsBlock".
 */
export interface BoatsBlock {
  blockType: 'boats';
  title: string;
  boats: {
    name: string;
    manufacturer: string;
    model: string;
    year: number;
    type: string;
    price: number;
    status: 'IN_STOCK' | 'ON_ORDER' | 'SOLD';
    condition: 'NEW' | 'USED';
    image: number | Media;
    description?:
      | {
          [k: string]: unknown;
        }[]
      | null;
    features?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    specifications?:
      | {
          label: string;
          value: string;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  manufacturers: {
    name: string;
    value: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  siteName: string;
  companyName: string;
  phoneNumber: string;
  email: string;
  logo?: (number | null) | Media;
  address: {
    street: string;
    city: string;
    state: string;
    zip: string;
  };
  socialMedia?:
    | {
        platform: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  navigation?: {
    header?:
      | {
          label: string;
          link: string;
          order: number;
          id?: string | null;
        }[]
      | null;
    footer?:
      | {
          label: string;
          link: string;
          order: number;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
  id: number;
  name: string;
  location: 'header' | 'footer';
  items: {
    label: string;
    link: string;
    subItems?:
      | {
          label: string;
          link: string;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'boats';
        value: number | Boat;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'settings';
        value: number | Setting;
      } | null)
    | ({
        relationTo: 'navigation';
        value: number | Navigation;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        desktop?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  isHomePage?: T;
  content?:
    | T
    | {
        contact?:
          | T
          | {
              title?: T;
              subtitle?: T;
              address?: T;
              hours?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              phones?:
                | T
                | {
                    label?: T;
                    number?: T;
                    id?: T;
                  };
              emails?:
                | T
                | {
                    email?: T;
                    id?: T;
                  };
              areasServed?:
                | T
                | {
                    area?: T;
                    id?: T;
                  };
              mapImage?: T;
              ctaTitle?: T;
              ctaDescription?: T;
              ctaButtonText?: T;
              id?: T;
              blockName?: T;
            };
        financing?:
          | T
          | {
              blockType?: T;
              title?: T;
              subtitle?: T;
              boatFinancing?:
                | T
                | {
                    title?: T;
                    description?: T;
                    features?:
                      | T
                      | {
                          text?: T;
                          id?: T;
                        };
                  };
              serviceFinancing?:
                | T
                | {
                    title?: T;
                    description?: T;
                    features?:
                      | T
                      | {
                          text?: T;
                          id?: T;
                        };
                  };
              calculator?:
                | T
                | {
                    title?: T;
                    defaultAmount?: T;
                    defaultRate?: T;
                    defaultTerm?: T;
                    phoneNumber?: T;
                  };
              faq?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              cta?:
                | T
                | {
                    title?: T;
                    description?: T;
                    phoneNumber?: T;
                  };
              id?: T;
              blockName?: T;
            };
        services?:
          | T
          | {
              blockType?: T;
              title?: T;
              subtitle?: T;
              phoneNumber?: T;
              featuredServices?: T;
              maintenanceServices?: T;
              upgradeServices?: T;
              reasons?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              reasonsImage?: T;
              winterizationPackages?: T;
              servicePolicies?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        aboutUs?:
          | T
          | {
              blockType?: T;
              aboutSection?:
                | T
                | {
                    title?: T;
                    content?:
                      | T
                      | {
                          paragraph?: T;
                          id?: T;
                        };
                    image?: T;
                    features?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          description?: T;
                          id?: T;
                        };
                  };
              brandsSection?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                    brands?:
                      | T
                      | {
                          name?: T;
                          description?: T;
                          features?:
                            | T
                            | {
                                text?: T;
                                id?: T;
                              };
                          image?: T;
                          popularModels?:
                            | T
                            | {
                                model?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              servicesSection?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                    description?: T;
                    services?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          description?: T;
                          id?: T;
                        };
                  };
              testimonialsSection?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                    testimonials?:
                      | T
                      | {
                          name?: T;
                          location?: T;
                          text?: T;
                          id?: T;
                        };
                  };
              contactSection?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                    address?: T;
                    hours?:
                      | T
                      | {
                          text?: T;
                          id?: T;
                        };
                    phones?:
                      | T
                      | {
                          label?: T;
                          number?: T;
                          id?: T;
                        };
                    emails?:
                      | T
                      | {
                          email?: T;
                          id?: T;
                        };
                    areasServed?:
                      | T
                      | {
                          area?: T;
                          id?: T;
                        };
                    mapImage?: T;
                    ctaTitle?: T;
                    ctaDescription?: T;
                    ctaButtonText?: T;
                  };
              id?: T;
              blockName?: T;
            };
        hero?:
          | T
          | {
              title?: T;
              description?: T;
              phoneNumber?: T;
              rating?:
                | T
                | {
                    value?: T;
                    text?: T;
                  };
              backgroundImage?: T;
              backgroundVideo?: T;
              primaryCta?:
                | T
                | {
                    label?: T;
                    link?: T;
                    icon?: T;
                  };
              secondaryCta?:
                | T
                | {
                    label?: T;
                    link?: T;
                    icon?: T;
                  };
              id?: T;
              blockName?: T;
            };
        featuredBrands?:
          | T
          | {
              title?: T;
              description?: T;
              brands?: T;
              id?: T;
              blockName?: T;
            };
        fleet?:
          | T
          | {
              title?: T;
              description?: T;
              boats?: T;
              cta?:
                | T
                | {
                    label?: T;
                    link?: T;
                  };
              id?: T;
              blockName?: T;
            };
        services_section?:
          | T
          | {
              blockType?: T;
              title?: T;
              description?: T;
              services?: T;
              cta?:
                | T
                | {
                    label?: T;
                    link?: T;
                  };
              id?: T;
              blockName?: T;
            };
        testimonials?:
          | T
          | {
              title?: T;
              description?: T;
              testimonials?: T;
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
        about?:
          | T
          | {
              title?: T;
              content?:
                | T
                | {
                    paragraph?: T;
                    id?: T;
                  };
              image?: T;
              features?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        brands?:
          | T
          | {
              title?: T;
              subtitle?: T;
              brands?:
                | T
                | {
                    name?: T;
                    description?: T;
                    features?:
                      | T
                      | {
                          text?: T;
                          id?: T;
                        };
                    image?: T;
                    popularModels?:
                      | T
                      | {
                          model?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        boats?: T | BoatsBlockSelect<T>;
      };
  slug?: T;
  seo?:
    | T
    | {
        metaDescription?: T;
        ogTitle?: T;
        ogDescription?: T;
        ogImage?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BoatsBlock_select".
 */
export interface BoatsBlockSelect<T extends boolean = true> {
  blockType?: T;
  title?: T;
  boats?:
    | T
    | {
        name?: T;
        manufacturer?: T;
        model?: T;
        year?: T;
        type?: T;
        price?: T;
        status?: T;
        condition?: T;
        image?: T;
        description?: T;
        features?:
          | T
          | {
              text?: T;
              id?: T;
            };
        specifications?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        id?: T;
      };
  manufacturers?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "boats_select".
 */
export interface BoatsSelect<T extends boolean = true> {
  name?: T;
  manufacturer?: T;
  model?: T;
  trim?: T;
  modelYear?: T;
  condition?: T;
  status?: T;
  price?: T;
  listPrice?: T;
  description?: T;
  mainImage?: T;
  gallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  specs?:
    | T
    | {
        length?: T;
        capacity?: T;
        speed?: T;
      };
  available?: T;
  stockNumber?: T;
  category?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  logo?: T;
  featured?: T;
  website?: T;
  models?:
    | T
    | {
        name?: T;
        description?: T;
        image?: T;
        specs?:
          | T
          | {
              length?: T;
              beam?: T;
              capacity?: T;
              weight?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  icon?: T;
  image?: T;
  featured?: T;
  price?:
    | T
    | {
        startingAt?: T;
        unit?: T;
      };
  details?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  callToAction?:
    | T
    | {
        title?: T;
        description?: T;
        buttonText?: T;
        buttonLink?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  text?: T;
  rating?: T;
  position?: T;
  company?: T;
  featured?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  siteName?: T;
  companyName?: T;
  phoneNumber?: T;
  email?: T;
  logo?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        state?: T;
        zip?: T;
      };
  socialMedia?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  navigation?:
    | T
    | {
        header?:
          | T
          | {
              label?: T;
              link?: T;
              order?: T;
              id?: T;
            };
        footer?:
          | T
          | {
              label?: T;
              link?: T;
              order?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation_select".
 */
export interface NavigationSelect<T extends boolean = true> {
  name?: T;
  location?: T;
  items?:
    | T
    | {
        label?: T;
        link?: T;
        subItems?:
          | T
          | {
              label?: T;
              link?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}